export const getPhones = (state, ownProps) => {
    const activeCategory = ownProps.routeParams.id;
    const search = state.search;
    let phones = state.phonesPage.map(id => state.phones[id]);

    if (activeCategory) {
        phones = phones.filter(phone => phone.categoryId === activeCategory);
    }

    if (search) {
        phones = phones.filter(phone => phone.name.toLowerCase().includes(search.toLowerCase()));
    }

    return phones;
};

export const getRenderedPhonesLength = state => {
    return state.phonesPage.length;
};

export const getPhoneById = (state, id) => {
    return state.phones[id];
};

export const getTotalBasketCount = state => {
    return state.basket.length;
};

export const getTotalBasketPrices = state => {
    const prices = state.basket.map(id => state.phones[id].price);
    return prices.reduce((sum, price) => {
        return sum + price;
    }, 0);
};

export const getCategories = state => {
    return Object.values(state.categories);
};

export const getPhonesWithCount = state => {
    return [...new Set(state.basket)].map(id => {
        const phone = getPhoneById(state, id);
        phone.count = state.basket.filter(basketId => basketId === id).length;
        return phone;
    });
};